println "######################[begin build script] Env:[$env] ######################"
buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
        env = hasProperty("env") ? env : "dev"
    }
    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'java'

group = 'com.wlgdo.avatar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}
bootJar {
    project.group = "com.wlgdo"
    baseName = 'avatar-web-docker'
    version = '1.0'
}
docker {
    dependsOn build
    name "${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
    println "###########JAR_FILE:-----${bootJar.archiveName}#############"

}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.0.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

